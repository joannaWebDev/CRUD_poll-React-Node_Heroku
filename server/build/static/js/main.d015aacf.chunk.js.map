{"version":3,"sources":["components/GiftBox.js","components/Poll.js","App.js","index.js"],"names":["TOGGLE_BOX","DEFAULT","open","wasOpen","reducer","state","type","GiftBox","useReducer","dispatch","className","onClick","e","StrawPoll","useState","voteData","setVoteData","totalVotes","setTotalVotes","voted","setVoted","url","updateState","data","sum","forEach","obj","votes","useEffect","fetch","then","response","json","pollOptions","submitVote","preventDefault","voteSelected","target","id","options","method","headers","body","JSON","stringify","res","map","item","optionName","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAIMA,EAAa,mBAMbC,EAAU,CAAEC,MAAM,EAAOC,SAAS,GAElCC,EAAU,WAGV,IAFJC,EAEG,uDAFKJ,EAEL,yCADFK,EACE,EADFA,KAGD,OAAOA,GACL,KAAKN,EACH,MAAO,CACLE,MAAOG,EAAMH,KACbC,QAASE,EAAMH,MAGnB,QAAS,OAAOG,IAmDLE,EA7CC,WAEd,MAA0BC,qBAAWJ,EAASH,GAA9C,mBAAOI,EAAP,KAAcI,EAAd,KAEA,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKA,UAAU,WACf,qBAAKA,UAAU,YACf,qBAAKA,UAAU,YACf,sBAAKA,UAAU,MAAf,UAGIL,EAAMH,KACD,mBAAGQ,UAAU,aAAb,0BACD,6BAGN,sBACEA,UACEL,EAAMH,KAAU,WAChBG,EAAMF,QAAU,YAChB,MAEFQ,QAAS,SAAAC,GAAC,OAAIH,EA/Cf,CAAEH,KAAMN,KAyCT,UAQE,qBAAKU,UAAU,QAAf,SACEL,EAAMH,KAAM,IAAM,MAIpB,qBAAKQ,UAAU,cACf,qBAAKA,UAAU,eACf,qBAAKA,UAAU,mBAGjB,qBAAKA,UAAU,aACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,sB,MCURG,MAzEf,WACE,MAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAM,SAENC,EAAc,SAACC,GACnBP,EAAYO,GACR,IAAIC,EAAM,EACVD,EAAKE,SAAQ,SAAUC,GACrBF,GAAOE,EAAIC,SAEbT,EAAcM,IAGpBI,qBAAU,WACRC,MAAMR,GACHS,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACP,GACLD,EAAYC,QAEf,IAGH,IAwBIU,EAxBEC,EAAa,SAACtB,GAElB,GADAA,EAAEuB,kBACY,IAAVhB,EAAiB,CACnB,IAAMiB,EAAexB,EAAEyB,OAAOC,GAM9BlB,GAAUD,GAEV,IAAMoB,EAAU,CACdC,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAACN,GAAIF,KAG5BP,MAAMR,EAAKkB,GACRT,MAAK,SAACe,GAAD,OAASA,EAAIb,UAClBF,MAAK,SAACP,GAAD,OAASD,EAAYC,QAoBjC,OAdIR,IACFkB,EAAclB,EAAS+B,KAAI,SAACC,GAC1B,OACE,+BACE,cAAC,EAAD,IACA,yBAAQpC,QAASuB,EAAYI,GAAIS,EAAKT,GAAtC,UACGS,EAAKC,WADR,SAESD,EAAKpB,MAFd,cAFOoB,EAAKT,QAYlB,sBAAK5B,UAAU,OAAf,UACE,oEACA,oBAAIA,UAAWS,EAAQ,UAAY,UAAnC,SAA+Cc,IAC/C,8CAAiBhB,S,MC5DRgC,MARf,WACE,OACE,mCACA,cAAC,EAAD,OCHJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d015aacf.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\r\nimport './GiftBox.css';\r\n\r\n//ACTIONS\r\nconst TOGGLE_BOX = '[GiftBox] Toggle'\r\nconst toggleBox = () => {\r\n  return { type: TOGGLE_BOX }\r\n}\r\n\r\n//REDUCERS (Update)\r\nconst DEFAULT = { open: false, wasOpen: false }\r\n\r\nconst reducer = (\r\n  state = DEFAULT, \r\n  {type}\r\n) => {\r\n  \r\n  switch(type) {\r\n    case TOGGLE_BOX: {      \r\n      return { \r\n        open: !state.open,\r\n        wasOpen: state.open\r\n      }\r\n    }\r\n    default: return state\r\n  }\r\n}\r\n\r\n//COMPONENT\r\n\r\nconst GiftBox = () => {\r\n  //hooks are an amazing functional solution!\r\n  const [state, dispatch] = useReducer(reducer, DEFAULT)\r\n  \r\n  return (\r\n    <div className=\"floor\">\r\n      <div className='shadow'></div>\r\n      <div className='shadow2'></div>\r\n      <div className='shadow3'></div>\r\n      <div className=\"box\">\r\n    \r\n        {\r\n          state.open\r\n            ? (<i className=\"heart-gift\">❤️</i>)\r\n            : <></> \r\n        }\r\n  \r\n        <div \r\n          className={\r\n            state.open    ? 'lid open' \r\n          : state.wasOpen ? 'lid close'\r\n          : 'lid'\r\n          }\r\n          onClick={e => dispatch(toggleBox())}>\r\n          \r\n          <div className=\"qmark\">{\r\n            state.open? '!' : '?'\r\n          }\r\n          </div>\r\n      \r\n          <div className=\"face ltop\"></div>\r\n          <div className=\"face lleft\"></div>\r\n          <div className=\"face lright\"></div>\r\n        </div>\r\n    \r\n        <div className=\"face top\"></div>\r\n        <div className=\"face left\"></div>\r\n        <div className=\"face right\"></div>\r\n    \r\n      </div>\r\n  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GiftBox;\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport GiftBox from './GiftBox';\r\nimport './Poll.css';\r\n\r\nfunction StrawPoll() {\r\n  const [voteData, setVoteData] = useState();\r\n  const [totalVotes, setTotalVotes] = useState(0);\r\n  const [voted, setVoted] = useState(false);\r\n\r\n  const url = '/poll/';\r\n\r\n  const updateState = (data) => {\r\n    setVoteData(data);\r\n        let sum = 0;\r\n        data.forEach(function (obj) {\r\n          sum += obj.votes;\r\n        });\r\n        setTotalVotes(sum);\r\n      };\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        updateState(data);\r\n      });\r\n  }, []);\r\n\r\n\r\n  const submitVote = (e) => {\r\n    e.preventDefault();\r\n    if (voted === false) { \r\n      const voteSelected = e.target.id;\r\n    /* \r\n      const voteCurrent = voteData[voteSelected].votes;\r\n      voteData[voteSelected].votes = voteCurrent + 1; \r\n      setTotalVotes(totalVotes + 1);\r\n      */\r\n      setVoted(!voted); \r\n\r\n      const options = {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({id: voteSelected}),\r\n      };\r\n      \r\n      fetch(url, options)\r\n        .then((res) => res.json())\r\n        .then((data) =>updateState(data));\r\n\r\n    }\r\n}; \r\n\r\n  let pollOptions;\r\n  if (voteData) {\r\n    pollOptions = voteData.map((item) => {\r\n      return (\r\n        <li key={item.id}>\r\n          <GiftBox />\r\n          <button onClick={submitVote} id={item.id}>\r\n            {item.optionName} \r\n            - got {item.votes} votes\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"poll\">\r\n      <h1>Choose the gift behind mystery box</h1>\r\n      <ul className={voted ? 'results' : 'options'}>{pollOptions}</ul>\r\n      <p>TOTAL VOTES: {totalVotes}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StrawPoll;\r\n","import React from \"react\";\nimport Poll from \"./components/Poll\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n    <Poll />\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}